{"ast":null,"code":"var _jsxFileName = \"/home/patrick/Practical_Web_Dev/Bank-Of-React/src/App.js\";\n\n/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport axios from 'axios'; // Import other components\n\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    // Create and initialize state\n    super();\n\n    this.mockLogIn = logInInfo => {\n      const newUser = { ...this.state.currentUser\n      };\n      newUser.userName = logInInfo.userName;\n      this.setState({\n        currentUser: newUser\n      });\n    };\n\n    this.addDebit = (description, amount) => {\n      const formAmount = Number(amount);\n      const amountProperDigits = (Math.round(formAmount * 100) / 100).toFixed(2);\n      const submissionDate = new Date();\n      const year = submissionDate.getFullYear();\n      const day = String(submissionDate.getDate()).padStart(2, '0');\n      const month = String(submissionDate.getMonth() + 1).padStart(2, '0');\n      const time = year + \"-\" + month + \"-\" + day;\n      const newSubmission = {\n        id: this.state.debitList.length + 1,\n        description: description,\n        amount: amountProperDigits,\n        date: time\n      };\n      this.setState(prevState => ({\n        debitList: [...prevState.debitList, newSubmission]\n      }));\n      const debit = -1 * amountProperDigits;\n      this.updateBalance(debit);\n    };\n\n    this.updateBalance = amount => {\n      this.setState(prevState => ({\n        accountBalance: Math.round((prevState.accountBalance + amount) * 100) / 100\n      }));\n    };\n\n    this.addCredit = event => {\n      event.preventDefault();\n      const formData = new FormData(event.target);\n      const description = formData.get('description');\n      const credit = Number(formData.get('amount'));\n      const amount = credit.toFixed(2);\n      const id = this.state.creditList.length + 1;\n      const submissionDate = new Date();\n      const year = submissionDate.getFullYear();\n      const day = String(submissionDate.getDate()).padStart(2, '0');\n      const month = String(submissionDate.getMonth() + 1).padStart(2, '0');\n      const date = year + \"-\" + month + \"-\" + day;\n      const newCredit = {\n        id,\n        description,\n        amount,\n        date\n      };\n      this.setState(prevState => ({\n        creditList: [...prevState.creditList, newCredit]\n      }));\n      event.target.reset();\n      this.updateBalance(credit);\n    };\n\n    this.state = {\n      accountBalance: 0,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99'\n      }\n    };\n  } // Update state's currentUser (userName) after \"Log In\" button is clicked\n\n\n  async componentDidMount() {\n    // Await for promise (completion) returned from API call for Credit Card information\n    try {\n      // Accept success response as array of JSON objects (credit card info)\n      let response = await axios.get(\"https://johnnylaicode.github.io/api/credits.json\");\n      this.setState({\n        creditList: response.data\n      }); //Storing received data into state's creditList\n\n      console.log(this.state.creditList);\n    } catch (error) {\n      // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data); // Print out error message (e.g., Not Found)\n\n        console.log(error.response.status); // Print out error status code (e.g., 404)\n      }\n    } // Await for promise (completion) returned from API call for Debit Card information\n\n\n    try {\n      // Accept success response as array of JSON objects (debit card info)\n      let response = await axios.get(\"https://johnnylaicode.github.io/api/debits.json\");\n      this.setState({\n        debitList: response.data\n      }); //Storing received data into state's debitList\n    } catch (error) {\n      // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data); // Print out error message (e.g., Not Found)\n\n        console.log(error.response.status); // Print out error status code (e.g., 404)\n      }\n    }\n\n    let credit = 0;\n    this.state.creditList.forEach(obj => {\n      credit += obj.amount;\n    });\n    let debit = 0;\n    this.state.debitList.forEach(obj => {\n      debit += obj.amount;\n    });\n    this.setState({\n      accountBalance: credit - debit\n    });\n  } // add a Credit from form to the creditList\n\n\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    // Create React elements and pass input props to components\n    const HomeComponent = () => /*#__PURE__*/_jsxDEV(Home, {\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 34\n    }, this);\n\n    const UserProfileComponent = () => /*#__PURE__*/_jsxDEV(UserProfile, {\n      userName: this.state.currentUser.userName,\n      memberSince: this.state.currentUser.memberSince\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n\n    const LogInComponent = () => /*#__PURE__*/_jsxDEV(LogIn, {\n      user: this.state.currentUser,\n      mockLogIn: this.mockLogIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 35\n    }, this);\n\n    const CreditsComponent = () => /*#__PURE__*/_jsxDEV(Credits, {\n      credits: this.state.creditList,\n      addCredit: this.addCredit,\n      balance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 37\n    }, this);\n\n    const DebitsComponent = () => /*#__PURE__*/_jsxDEV(Debits, {\n      debits: this.state.debitList,\n      addDebit: this.addDebit,\n      balance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 36\n    }, this); // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n\n\n    return /*#__PURE__*/_jsxDEV(Router, {\n      basename: \"/bank-of-react-starter-code\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: HomeComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/userProfile\",\n          render: UserProfileComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          render: LogInComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/credits\",\n          render: CreditsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/debits\",\n          render: DebitsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/patrick/Practical_Web_Dev/Bank-Of-React/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","axios","Home","UserProfile","LogIn","Credits","Debits","App","constructor","mockLogIn","logInInfo","newUser","state","currentUser","userName","setState","addDebit","description","amount","formAmount","Number","amountProperDigits","Math","round","toFixed","submissionDate","Date","year","getFullYear","day","String","getDate","padStart","month","getMonth","time","newSubmission","id","debitList","length","date","prevState","debit","updateBalance","accountBalance","addCredit","event","preventDefault","formData","FormData","target","get","credit","creditList","newCredit","reset","memberSince","componentDidMount","response","data","console","log","error","status","forEach","obj","render","HomeComponent","UserProfileComponent","LogInComponent","CreditsComponent","DebitsComponent"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAC1BW,EAAAA,WAAW,GAAG;AAAG;AACf;;AADY,SAcdC,SAdc,GAcDC,SAAD,IAAe;AACzB,YAAMC,OAAO,GAAG,EAAC,GAAG,KAAKC,KAAL,CAAWC;AAAf,OAAhB;AACAF,MAAAA,OAAO,CAACG,QAAR,GAAmBJ,SAAS,CAACI,QAA7B;AACA,WAAKC,QAAL,CAAc;AAACF,QAAAA,WAAW,EAAEF;AAAd,OAAd;AACD,KAlBa;;AAAA,SAoBdK,QApBc,GAoBH,CAACC,WAAD,EAAcC,MAAd,KAAyB;AAClC,YAAMC,UAAU,GAAGC,MAAM,CAACF,MAAD,CAAzB;AACA,YAAMG,kBAAkB,GAAG,CAACC,IAAI,CAACC,KAAL,CAAWJ,UAAU,GAAG,GAAxB,IAA+B,GAAhC,EAAqCK,OAArC,CAA6C,CAA7C,CAA3B;AAEA,YAAMC,cAAc,GAAG,IAAIC,IAAJ,EAAvB;AACA,YAAMC,IAAI,GAAGF,cAAc,CAACG,WAAf,EAAb;AACA,YAAMC,GAAG,GAAGC,MAAM,CAACL,cAAc,CAACM,OAAf,EAAD,CAAN,CAAiCC,QAAjC,CAA0C,CAA1C,EAA4C,GAA5C,CAAZ;AACA,YAAMC,KAAK,GAAGH,MAAM,CAACL,cAAc,CAACS,QAAf,KAA4B,CAA7B,CAAN,CAAsCF,QAAtC,CAA+C,CAA/C,EAAiD,GAAjD,CAAd;AAEA,YAAMG,IAAI,GAAGR,IAAI,GAAG,GAAP,GAAaM,KAAb,GAAqB,GAArB,GAA2BJ,GAAxC;AAEA,YAAMO,aAAa,GAAG;AACpBC,QAAAA,EAAE,EAAE,KAAKzB,KAAL,CAAW0B,SAAX,CAAqBC,MAArB,GAA8B,CADd;AAEpBtB,QAAAA,WAAW,EAAEA,WAFO;AAGpBC,QAAAA,MAAM,EAAEG,kBAHY;AAIpBmB,QAAAA,IAAI,EAAEL;AAJc,OAAtB;AAOA,WAAKpB,QAAL,CAAc0B,SAAS,KAAK;AAC1BH,QAAAA,SAAS,EAAE,CAAC,GAAGG,SAAS,CAACH,SAAd,EAAyBF,aAAzB;AADe,OAAL,CAAvB;AAIA,YAAMM,KAAK,GAAG,CAAC,CAAD,GAAKrB,kBAAnB;AACA,WAAKsB,aAAL,CAAmBD,KAAnB;AACD,KA5Ca;;AAAA,SA8CdC,aA9Cc,GA8CGzB,MAAD,IAAY;AAC1B,WAAKH,QAAL,CAAc0B,SAAS,KAAK;AAC1BG,QAAAA,cAAc,EAAEtB,IAAI,CAACC,KAAL,CAAW,CAACkB,SAAS,CAACG,cAAV,GAA2B1B,MAA5B,IAAsC,GAAjD,IAAwD;AAD9C,OAAL,CAAvB;AAGD,KAlDa;;AAAA,SAkGd2B,SAlGc,GAkGDC,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,CAAaH,KAAK,CAACI,MAAnB,CAAjB;AACA,YAAMjC,WAAW,GAAG+B,QAAQ,CAACG,GAAT,CAAa,aAAb,CAApB;AACA,YAAMC,MAAM,GAAGhC,MAAM,CAAC4B,QAAQ,CAACG,GAAT,CAAa,QAAb,CAAD,CAArB;AACA,YAAMjC,MAAM,GAAIkC,MAAD,CAAS5B,OAAT,CAAiB,CAAjB,CAAf;AACA,YAAMa,EAAE,GAAG,KAAKzB,KAAL,CAAWyC,UAAX,CAAsBd,MAAtB,GAA6B,CAAxC;AAEA,YAAMd,cAAc,GAAG,IAAIC,IAAJ,EAAvB;AACA,YAAMC,IAAI,GAAGF,cAAc,CAACG,WAAf,EAAb;AACA,YAAMC,GAAG,GAAGC,MAAM,CAACL,cAAc,CAACM,OAAf,EAAD,CAAN,CAAiCC,QAAjC,CAA0C,CAA1C,EAA4C,GAA5C,CAAZ;AACA,YAAMC,KAAK,GAAGH,MAAM,CAACL,cAAc,CAACS,QAAf,KAA4B,CAA7B,CAAN,CAAsCF,QAAtC,CAA+C,CAA/C,EAAiD,GAAjD,CAAd;AAEA,YAAMQ,IAAI,GAAGb,IAAI,GAAG,GAAP,GAAaM,KAAb,GAAqB,GAArB,GAA2BJ,GAAxC;AAEA,YAAMyB,SAAS,GAAG;AAACjB,QAAAA,EAAD;AAAKpB,QAAAA,WAAL;AAAkBC,QAAAA,MAAlB;AAA0BsB,QAAAA;AAA1B,OAAlB;AACA,WAAKzB,QAAL,CAAe0B,SAAD,KAAgB;AAC5BY,QAAAA,UAAU,EAAE,CAAC,GAAGZ,SAAS,CAACY,UAAd,EAA0BC,SAA1B;AADgB,OAAhB,CAAd;AAGAR,MAAAA,KAAK,CAACI,MAAN,CAAaK,KAAb;AAEA,WAAKZ,aAAL,CAAmBS,MAAnB;AACD,KAxHa;;AAEZ,SAAKxC,KAAL,GAAa;AACXgC,MAAAA,cAAc,EAAE,CADL;AAEXS,MAAAA,UAAU,EAAE,EAFD;AAGXf,MAAAA,SAAS,EAAE,EAHA;AAIXzB,MAAAA,WAAW,EAAE;AACXC,QAAAA,QAAQ,EAAE,WADC;AAEX0C,QAAAA,WAAW,EAAE;AAFF;AAJF,KAAb;AASD,GAZyB,CAc1B;;;AAuCuB,QAAjBC,iBAAiB,GAAE;AACvB;AACA,QAAG;AAAG;AACJ,UAAIC,QAAQ,GAAG,MAAMzD,KAAK,CAACkD,GAAN,CAAU,kDAAV,CAArB;AACA,WAAKpC,QAAL,CAAc;AAACsC,QAAAA,UAAU,EAAEK,QAAQ,CAACC;AAAtB,OAAd,EAFC,CAE2C;;AAC5CC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjD,KAAL,CAAWyC,UAAvB;AACD,KAJD,CAMA,OAAMS,KAAN,EAAY;AAAE;AACZ,UAAIA,KAAK,CAACJ,QAAV,EAAoB;AAClB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACJ,QAAN,CAAeC,IAA3B,EAFkB,CAEiB;;AACnCC,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACJ,QAAN,CAAeK,MAA3B,EAHkB,CAGmB;AACtC;AACF,KAdsB,CAgBvB;;;AACA,QAAG;AAAE;AACH,UAAIL,QAAQ,GAAG,MAAMzD,KAAK,CAACkD,GAAN,CAAU,iDAAV,CAArB;AACA,WAAKpC,QAAL,CAAc;AAACuB,QAAAA,SAAS,EAAEoB,QAAQ,CAACC;AAArB,OAAd,EAFC,CAE0C;AAC5C,KAHD,CAKA,OAAMG,KAAN,EAAY;AAAE;AACZ,UAAIA,KAAK,CAACJ,QAAV,EAAoB;AAClB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACJ,QAAN,CAAeC,IAA3B,EAFkB,CAEiB;;AACnCC,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACJ,QAAN,CAAeK,MAA3B,EAHkB,CAGmB;AACtC;AACF;;AAED,QAAIX,MAAM,GAAG,CAAb;AACA,SAAKxC,KAAL,CAAWyC,UAAX,CAAsBW,OAAtB,CAA+BC,GAAD,IAAS;AACrCb,MAAAA,MAAM,IAAIa,GAAG,CAAC/C,MAAd;AACD,KAFD;AAIA,QAAIwB,KAAK,GAAG,CAAZ;AACA,SAAK9B,KAAL,CAAW0B,SAAX,CAAqB0B,OAArB,CAA8BC,GAAD,IAAS;AACpCvB,MAAAA,KAAK,IAAIuB,GAAG,CAAC/C,MAAb;AACD,KAFD;AAIA,SAAKH,QAAL,CAAc;AACZ6B,MAAAA,cAAc,EAAEQ,MAAM,GAAGV;AADb,KAAd;AAGD,GAhGyB,CAkG1B;;;AAyBA;AACAwB,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,aAAa,GAAG,mBAAO,QAAC,IAAD;AAAM,MAAA,cAAc,EAAE,KAAKvD,KAAL,CAAWgC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAA7B;;AACA,UAAMwB,oBAAoB,GAAG,mBAC3B,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKxD,KAAL,CAAWC,WAAX,CAAuBC,QAA9C;AAAwD,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,WAAX,CAAuB2C;AAA5F;AAAA;AAAA;AAAA;AAAA,YADF;;AAGA,UAAMa,cAAc,GAAG,mBAAO,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKzD,KAAL,CAAWC,WAAxB;AAAqC,MAAA,SAAS,EAAE,KAAKJ;AAArD;AAAA;AAAA;AAAA;AAAA,YAA9B;;AACA,UAAM6D,gBAAgB,GAAG,mBAAO,QAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAK1D,KAAL,CAAWyC,UAA7B;AAAyC,MAAA,SAAS,EAAE,KAAKR,SAAzD;AAAoE,MAAA,OAAO,EAAE,KAAKjC,KAAL,CAAWgC;AAAxF;AAAA;AAAA;AAAA;AAAA,YAAhC;;AACA,UAAM2B,eAAe,GAAG,mBAAO,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAK3D,KAAL,CAAW0B,SAA3B;AAAsC,MAAA,QAAQ,EAAE,KAAKtB,QAArD;AAA+D,MAAA,OAAO,EAAI,KAAKJ,KAAL,CAAWgC;AAArF;AAAA;AAAA;AAAA;AAAA,YAA/B,CARO,CAWP;;;AACA,wBACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,6BAAjB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,MAAM,EAAEuB;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,cAAlB;AAAiC,UAAA,MAAM,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAA2B,UAAA,MAAM,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,UAAlB;AAA6B,UAAA,MAAM,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,SAAlB;AAA4B,UAAA,MAAM,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AApJyB;;AAuJ5B,eAAehE,GAAf","sourcesContent":["/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport axios from 'axios';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 0,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n  \n  addDebit = (description, amount) => {\n    const formAmount = Number(amount);\n    const amountProperDigits = (Math.round(formAmount * 100) / 100).toFixed(2);\n\n    const submissionDate = new Date();\n    const year = submissionDate.getFullYear();\n    const day = String(submissionDate.getDate()).padStart(2,'0');\n    const month = String(submissionDate.getMonth() + 1).padStart(2,'0');\n\n    const time = year + \"-\" + month + \"-\" + day;\n\n    const newSubmission = {\n      id: this.state.debitList.length + 1,\n      description: description,\n      amount: amountProperDigits,\n      date: time\n    };\n\n    this.setState(prevState => ({\n      debitList: [...prevState.debitList, newSubmission]\n    })); \n\n    const debit = -1 * amountProperDigits;\n    this.updateBalance(debit);\n  }\n\n  updateBalance = (amount) => {\n    this.setState(prevState => ({\n      accountBalance: Math.round((prevState.accountBalance + amount) * 100) / 100\n    })); \n  }\n\n  async componentDidMount(){\n    // Await for promise (completion) returned from API call for Credit Card information\n    try{  // Accept success response as array of JSON objects (credit card info)\n      let response = await axios.get(\"https://johnnylaicode.github.io/api/credits.json\");\n      this.setState({creditList: response.data}); //Storing received data into state's creditList\n      console.log(this.state.creditList);\n    }\n\n    catch(error){ // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data);  // Print out error message (e.g., Not Found)\n        console.log(error.response.status);  // Print out error status code (e.g., 404)\n      }    \n    }\n\n    // Await for promise (completion) returned from API call for Debit Card information\n    try{ // Accept success response as array of JSON objects (debit card info)\n      let response = await axios.get(\"https://johnnylaicode.github.io/api/debits.json\");\n      this.setState({debitList: response.data}); //Storing received data into state's debitList\n    }\n\n    catch(error){ // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data);  // Print out error message (e.g., Not Found)\n        console.log(error.response.status);  // Print out error status code (e.g., 404)\n      }    \n    }\n\n    let credit = 0;\n    this.state.creditList.forEach((obj) => {\n      credit += obj.amount;\n    });\n\n    let debit = 0;\n    this.state.debitList.forEach((obj) => {\n      debit += obj.amount;\n    });\n\n    this.setState({\n      accountBalance: credit - debit\n    });\n  }\n\n  // add a Credit from form to the creditList\n  addCredit = (event) => {\n    event.preventDefault(); \n    const formData = new FormData(event.target);\n    const description = formData.get('description'); \n    const credit = Number(formData.get('amount')); \n    const amount = (credit).toFixed(2);\n    const id = this.state.creditList.length+1\n    \n    const submissionDate = new Date();\n    const year = submissionDate.getFullYear();\n    const day = String(submissionDate.getDate()).padStart(2,'0');\n    const month = String(submissionDate.getMonth() + 1).padStart(2,'0');\n\n    const date = year + \"-\" + month + \"-\" + day;\n\n    const newCredit = {id, description, amount, date}\n    this.setState((prevState) => ({\n      creditList: [...prevState.creditList, newCredit]\n    }));\n    event.target.reset();\n    \n    this.updateBalance(credit)\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} addCredit={this.addCredit} balance={this.state.accountBalance}/>) \n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebit={this.addDebit} balance = {this.state.accountBalance}/>) \n\n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/bank-of-react-starter-code\">\n        <div></div>\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}